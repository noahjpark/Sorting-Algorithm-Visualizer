{"version":3,"sources":["Algorithms/SortingAlgorithms.js","Visualizer/Visualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["getSortAnimations","arr","algorithm","animations","copy","i","length","sort","a","b","n","min","j","push","swap","selectionSortHelper","insertionSortHelper","sorted","end","bubbleSortHelper","mergeSortHelper","quickSortHelper","idx","freq","countingSortHelper","Math","floor","heapify","heapSortHelper","console","log","areEqual","left","right","mid","n1","n2","t1","t2","merge","p","pivot","partition","largest","l","r","temp","UNSORTED","COMPARE","SORTED","MOVED","SCANNED","CONTRAST","Visualizer","props","state","array","speed","inProgress","handleSizeChange","bind","handleSpeedChange","this","makeArray","event","target","value","updateSpeed","newSpeed","setState","alg","bars","random","setTimeout","bstyle","style","backgroundColor","reset","markAsFinished","markInProgress","document","getElementsByClassName","b1idx","b2idx","c","b1style","b2style","color","height","s","markAsSorted","bidx","numHeightTop","getHeight","numHeightBottom","numWidth","window","innerWidth","numMargin","getMargin","id","className","onClick","type","max","onChange","direction","map","width","marginLeft","marginRight","visualizeSelectionSort","visualizeInsertionSort","visualizeBubbleSort","visualizeMergeSort","visualizeQuickSort","visualizeCountingSort","visualizeHeapSort","React","Component","innerHeight","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"mRAAO,SAASA,EAAkBC,EAAKC,GAGnC,IAFA,IAAMC,EAAa,GACbC,EAAO,GACJC,EAAI,EAAGA,EAAIJ,EAAIK,OAAQD,IAC5BD,EAAKC,GAAKJ,EAAII,GAalB,OAZAD,EAAKG,MAAK,SAACC,EAAGC,GAAQ,OAAOD,EAAIC,KAEf,cAAdP,EAaR,SAA6BD,EAAKE,GAG9B,IAFA,IAAMO,EAAIT,EAAIK,OAELD,EAAI,EAAGA,EAAIK,EAAGL,IAAK,CAGxB,IAFA,IAAIM,EAAMN,EAEDO,EAAIP,EAAI,EAAGO,EAAIF,EAAGE,IACvBT,EAAWU,KAAK,CAACF,EAAKC,EAAG,IACzBT,EAAWU,KAAK,CAACF,EAAKC,GAAI,IACtBX,EAAIW,GAAKX,EAAIU,KAAMA,EAAMC,GAG7BD,IAAQN,GACRS,EAAKb,EAAKI,EAAGM,GACbR,EAAWU,KAAK,CAACR,EAAGJ,EAAII,GAAI,IAC5BF,EAAWU,KAAK,CAACF,EAAKV,EAAIU,GAAM,KAE/BR,EAAWU,KAAK,CAACR,EAAGJ,EAAII,GAAI,KA9BNU,CAAoBd,EAAKE,GACjC,cAAdD,EAiCb,SAA6BD,EAAKE,GAC9B,IAAMO,EAAIT,EAAIK,OACdH,EAAWU,KAAK,CAAC,EAAGZ,EAAI,GAAI,IAE5B,IAAK,IAAII,EAAI,EAAGA,EAAIK,EAAGL,IACnB,IAAK,IAAIO,EAAIP,EAAGO,EAAI,EAAGA,IAAK,CAExB,GADAT,EAAWU,KAAK,CAACD,EAAGA,EAAI,EAAG,IACvBX,EAAIW,GAAKX,EAAIW,EAAI,GAAI,CACrBT,EAAWU,KAAK,CAACD,EAAGX,EAAIW,GAAI,IAC5BT,EAAWU,KAAK,CAACD,EAAI,EAAGX,EAAIW,EAAI,GAAI,IACpC,MAEJE,EAAKb,EAAKW,EAAGA,EAAI,GACjBT,EAAWU,KAAK,CAACD,EAAGX,EAAIW,GAAI,IAC5BT,EAAWU,KAAK,CAACD,EAAI,EAAGX,EAAIW,EAAI,GAAI,KA/CRI,CAAoBf,EAAKE,GACtC,WAAdD,EAmDb,SAA0BD,EAAKE,GAI3B,IAHA,IAAMO,EAAIT,EAAIK,OACVW,GAAS,EAEJC,EAAMR,EAAI,GAAIO,EAAQC,IAAO,CAClCD,GAAS,EAET,IAAK,IAAIZ,EAAI,EAAGA,EAAIa,EAAKb,IACrBF,EAAWU,KAAK,CAACR,EAAGA,EAAI,EAAG,IAC3BF,EAAWU,KAAK,CAACR,EAAGA,EAAI,GAAI,IACxBJ,EAAII,GAAKJ,EAAII,EAAI,KACjBS,EAAKb,EAAKI,EAAGA,EAAI,GACjBF,EAAWU,KAAK,CAACR,EAAGJ,EAAII,GAAI,IAC5BF,EAAWU,KAAK,CAACR,EAAI,EAAGJ,EAAII,EAAI,GAAI,IACpCY,GAAS,GAIjBd,EAAWU,KAAK,CAACK,EAAKjB,EAAIiB,GAAM,KArEHC,CAAiBlB,EAAKE,GAChC,UAAdD,EAAuBkB,EAAgBnB,EAAKE,EAAY,EAAGF,EAAIK,OAAS,GAC1D,UAAdJ,EAAuBmB,EAAgBpB,EAAKE,EAAY,EAAGF,EAAIK,OAAS,GAC1D,aAAdJ,EAsIb,SAA4BD,EAAKE,GAI7B,IAHA,IAAIO,EAAIT,EAAIK,OAAQgB,EAAM,EACpBC,EAAO,GAEJlB,EAAI,EAAGA,GAAK,IAAKA,IACtBkB,EAAKV,KAAK,GAEd,IAAK,IAAIR,EAAI,EAAGA,EAAIK,EAAGL,IACnBF,EAAWU,KAAK,CAACR,EAAG,IACpBkB,EAAKtB,EAAII,MAGb,IAAK,IAAIA,EAAI,EAAGA,GAAK,IAAKA,IACtB,KAAOkB,EAAKlB,GAAK,GACbJ,EAAIqB,GAAOjB,EACXF,EAAWU,KAAK,CAACS,EAAKrB,EAAIqB,KAAQ,IAClCC,EAAKlB,KAtJsBmB,CAAmBvB,EAAKE,GACpC,SAAdD,GA0Jb,SAAwBD,EAAKE,GAGzB,IAFA,IAAIO,EAAIT,EAAIK,OAEHD,EAAIoB,KAAKC,MAAMhB,EAAI,GAAK,EAAGL,GAAK,EAAGA,IACxCsB,EAAQ1B,EAAKE,EAAYO,EAAGL,GAEhC,IAAK,IAAIA,EAAIK,EAAI,EAAGL,EAAI,EAAGA,IACvBS,EAAKb,EAAK,EAAGI,GACbF,EAAWU,KAAK,CAACR,EAAGJ,EAAII,GAAI,IAC5BsB,EAAQ1B,EAAKE,EAAYE,EAAG,GAGhCF,EAAWU,KAAK,CAAC,EAAGZ,EAAI,GAAI,IAtKG2B,CAAe3B,EAAKE,GAEnD0B,QAAQC,IA6MZ,SAAkB7B,EAAKgB,GACnB,IAAK,IAAIZ,EAAI,EAAGA,EAAIJ,EAAIK,OAAQD,IAC5B,GAAIJ,EAAII,KAAOY,EAAOZ,GAAI,OAAO,EACrC,OAAO,EAhNK0B,CAAS3B,EAAMH,IAEpBE,EAiEX,SAASiB,EAAgBnB,EAAKE,EAAY6B,EAAMC,GAC5C,KAAID,GAAQC,GAAZ,CAEA,IAAMC,EAAMF,EAAOP,KAAKC,OAAOO,EAAQD,GAAQ,GAC/CZ,EAAgBnB,EAAKE,EAAY6B,EAAME,GACvCd,EAAgBnB,EAAKE,EAAY+B,EAAM,EAAGD,GAI9C,SAAehC,EAAKE,EAAY6B,EAAME,EAAKD,GAIvC,IAHA,IAAIE,EAAKD,EAAMF,EAAO,EAAGI,EAAKH,EAAQC,EAClCG,EAAK,GAAIC,EAAK,GAETjC,EAAI,EAAGA,EAAI8B,EAAI9B,IACpBgC,EAAGhC,GAAKJ,EAAI+B,EAAO3B,GAEvB,IAAK,IAAIO,EAAI,EAAGA,EAAIwB,EAAIxB,IACpB0B,EAAG1B,GAAKX,EAAIiC,EAAMtB,EAAI,GAE1B,IAAIP,EAAI,EAAGO,EAAI,EAAGU,EAAMU,EACxB,KAAO3B,EAAI8B,GAAMvB,EAAIwB,GACjBjC,EAAWU,KAAK,CAACmB,EAAO3B,EAAG6B,EAAMtB,EAAI,EAAG,IACxCT,EAAWU,KAAK,CAACmB,EAAO3B,EAAG6B,EAAMtB,EAAI,GAAI,IACzCX,EAAIqB,GAAOe,EAAGhC,GAAKiC,EAAG1B,GAAKyB,EAAGhC,KAAOiC,EAAG1B,KACxCT,EAAWU,KAAK,CAACS,EAAKrB,EAAIqB,KAAQ,IAGtC,KAAOjB,EAAI8B,GACPlC,EAAIqB,GAAOe,EAAGhC,KACdF,EAAWU,KAAK,CAACS,EAAKrB,EAAIqB,KAAQ,IAGtC,KAAOV,EAAIwB,GACPnC,EAAIqB,GAAOgB,EAAG1B,KACdT,EAAWU,KAAK,CAACS,EAAKrB,EAAIqB,KAAQ,IA5BtCiB,CAAMtC,EAAKE,EAAY6B,EAAME,EAAKD,IAgCtC,SAASZ,EAAgBpB,EAAKE,EAAY6B,EAAMC,GAC5C,KAAID,GAAQC,GAAZ,CAEA,IAAIO,EAKR,SAAmBvC,EAAKE,EAAY6B,EAAMC,GAGtC,IAFA,IAAIQ,EAAQxC,EAAIgC,GAAQ5B,EAAI2B,EAEnBpB,EAAIoB,EAAMpB,EAAIqB,EAAOrB,IAC1BT,EAAWU,KAAK,CAACD,EAAGqB,EAAO,IAC3B9B,EAAWU,KAAK,CAACD,EAAGqB,GAAQ,IACxBhC,EAAIW,GAAK6B,IACT3B,EAAKb,EAAKI,EAAGO,GACbT,EAAWU,KAAK,CAACR,EAAGJ,EAAII,KAAM,KAItCS,EAAKb,EAAKI,EAAG4B,GACb,IAAK,IAAIrB,EAAIP,EAAGO,GAAKqB,EAAOrB,IACxBT,EAAWU,KAAK,CAACD,EAAGX,EAAIW,GAAI,IAChC,OAAOP,EApBCqC,CAAUzC,EAAKE,EAAY6B,EAAMC,GACzCZ,EAAgBpB,EAAKE,EAAY6B,EAAMQ,EAAI,GAC3CnB,EAAgBpB,EAAKE,EAAYqC,EAAI,EAAGP,IAyD5C,SAASN,EAAQ1B,EAAKE,EAAYO,EAAGL,GACjC,IAAIsC,EAAUtC,EAAGuC,EAAI,EAAIvC,EAAI,EAAGwC,EAAI,EAAIxC,EAAI,EAExCuC,EAAIlC,IACJP,EAAWU,KAAK,CAAC+B,EAAGD,EAAS,IAC7BxC,EAAWU,KAAK,CAAC+B,EAAGD,GAAU,IAC1B1C,EAAI2C,GAAK3C,EAAI0C,KAAUA,EAAUC,IAErCC,EAAInC,IACJP,EAAWU,KAAK,CAACgC,EAAGF,EAAS,IAC7BxC,EAAWU,KAAK,CAACgC,EAAGF,GAAU,IAC1B1C,EAAI4C,GAAK5C,EAAI0C,KAAUA,EAAUE,IAGrCF,IAAYtC,IACZS,EAAKb,EAAKI,EAAGsC,GACbxC,EAAWU,KAAK,CAACR,EAAGJ,EAAII,GAAI,IAC5BF,EAAWU,KAAK,CAAC8B,EAAS1C,EAAI0C,GAAU,IACxChB,EAAQ1B,EAAKE,EAAYO,EAAGiC,IAIpC,SAAS7B,EAAKb,EAAKI,EAAGO,GAClB,IAAIkC,EAAO7C,EAAII,GACfJ,EAAII,GAAKJ,EAAIW,GACbX,EAAIW,GAAKkC,E,iBC3MPC,EAAW,QACXC,EAAU,UACVC,EAAS,aACTC,EAAQ,aACRC,EAAU,gBACVC,EAAW,QAEIC,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAOA,IACFC,MAAQ,CACTC,MAAO,GACPC,MAAO,GACPC,YAAY,EACZxD,UAAW,IAEf,EAAKyD,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBATV,E,qDAYnB,WACIE,KAAKC,UAAU,K,8BAGnB,SAAiBC,GACbF,KAAKC,UAAUC,EAAMC,OAAOC,S,+BAGhC,SAAkBF,GACdF,KAAKK,YAAYH,EAAMC,OAAOC,S,yBAGlC,SAAYE,GACRN,KAAKO,UAAS,WACV,MAAO,CAAEZ,MAAOW,Q,4BAIxB,SAAeE,GACXR,KAAKO,UAAS,WACV,MAAO,CAAEX,YAAY,EAAMxD,UAAWoE,Q,4BAI9C,WACIR,KAAKO,UAAS,WACV,MAAO,CAAEX,YAAY,EAAOxD,UAAW,S,uBAI/C,SAAUqE,GACN,IAAKT,KAAKP,MAAMG,WAAY,CAExB,IADA,IAAMF,EAAQ,GACLnD,EAAI,EAAGA,EAAIkE,EAAMlE,IACtBmD,EAAM3C,MAySHL,EAzSkB,EAySfC,EAzSkB,IA0S7BgB,KAAKC,MAAMD,KAAK+C,UAAY/D,EAAID,EAAI,GAAKA,KAxSxCgD,EAAM3C,KAAK,KACXiD,KAAKO,UAAS,WACV,MAAO,CAAEb,MAAOA,MAqShC,IAAmBhD,EAAGC,I,uBAhSlB,WACI,IAAQ+C,EAAUM,KAAKP,MAAfC,MACR,OAAOA,EAAMlD,OAAS,EAClB,GAAKkD,EAAMlD,OAAS,EACpB,EAAIkD,EAAMlD,OAAS,GACnB,EAAIkD,EAAMlD,OAAS,GACnB,EAAIkD,EAAMlD,OAAS,GACnB,EAAIkD,EAAMlD,OAAS,IACnB,EAAIkD,EAAMlD,OAAS,IACnB,EAAI,K,0BAGZ,SAAaH,EAAYoE,GACrB,IAD4B,IAAD,kBAClBlE,GACLoE,YAAW,WACP,IAAOnD,EAAP,YAAcnB,EAAWE,GAAzB,MACMqE,EAASH,EAAKjD,GAAKqD,MACrBD,EAAOE,kBAAoB3B,IAAQyB,EAAOE,gBAAkB3B,KACjE9C,EAAWG,OAAS,EAAKiD,MAAME,QAL7BpD,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IAAM,EAApCA,GAQTyD,KAAKe,MAAM1E,EAAYoE,K,mBAG3B,SAAMpE,EAAYoE,GACd,IADqB,IAAD,kBACXlE,GACLoE,YAAW,WACP,IAAOnD,EAAP,YAAcnB,EAAWE,GAAzB,MACekE,EAAKjD,GAAKqD,MAClBC,gBAAkB7B,IACzB5C,EAAWG,OAAS,EAAKiD,MAAME,MAAS,OALvCpD,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IAAM,EAApCA,GAOToE,YAAW,WACP,EAAKK,iBACLjD,QAAQC,IAAI,cACZ3B,EAAWG,OAASwD,KAAKP,MAAME,MAAS,Q,oCAGhD,WAA0B,IAAD,OACrBK,KAAKiB,eAAe,aACpBN,YAAW,WAIP,IAHA,IAAMtE,EAAaH,EAAkB,EAAKuD,MAAMC,MAAO,aACjDe,EAAOS,SAASC,uBAAuB,aAFhC,WAIJ5E,GACL,GAAIF,EAAWE,GAAG,GAAK,EAAG,CACtB,kBAA0BF,EAAWE,GAArC,GAAO6E,EAAP,KAAcC,EAAd,KAAqBC,EAArB,KACMC,EAAUd,EAAKW,GAAOP,MACtBW,EAAUf,EAAKY,GAAOR,MACtBY,EAAc,IAANH,EAAUpC,EAAUD,EAClC0B,YAAW,WACPY,EAAQT,gBAAkBW,EAC1BD,EAAQV,gBAAkBW,IAC3BlF,EAAI,EAAKkD,MAAME,YAElBgB,YAAW,WACP,kBAAyBtE,EAAWE,GAApC,GAAOiB,EAAP,KAAYkE,EAAZ,KAAoBC,EAApB,KACMf,EAASH,EAAKjD,GAAKqD,MACzBD,EAAOc,OAAP,UAAmBA,EAAnB,MACU,IAANC,IAASf,EAAOE,gBAAkB1B,KACvC7C,EAAI,EAAKkD,MAAME,QAhBjBpD,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IAAM,EAApCA,GAoBT,EAAKqF,aAAavF,EAAYoE,KAC/B,O,oCAGP,WAA0B,IAAD,OACrBT,KAAKiB,eAAe,aACpBN,YAAW,WAIP,IAHA,IAAMtE,EAAaH,EAAkB,EAAKuD,MAAMC,MAAO,aACjDe,EAAOS,SAASC,uBAAuB,aAFhC,WAIJ5E,GACL,GAAyB,IAArBF,EAAWE,GAAG,GAAU,CACxB,kBAA0BF,EAAWE,GAArC,GAAO6E,EAAP,KAAcC,EAAd,KAAqBC,EAArB,KACMC,EAAUd,EAAKW,GAAOP,MACtBW,EAAUf,EAAKY,GAAOR,MACtBY,EAAc,IAANH,EAAUpC,EAAUD,EAClC0B,YAAW,WACPY,EAAQT,gBAAkBW,EAC1BD,EAAQV,gBAAkBW,IAC3BlF,EAAI,EAAKkD,MAAME,YAElBgB,YAAW,WACP,kBAAsBtE,EAAWE,GAAjC,GAAOiB,EAAP,KAAYkE,EAAZ,KACMd,EAASH,EAAKjD,GAAKqD,MACzBD,EAAOc,OAAP,UAAmBA,EAAnB,MACAd,EAAOE,gBAAkB1B,IAC1B7C,EAAI,EAAKkD,MAAME,QAhBjBpD,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IAAM,EAApCA,GAoBT,EAAKqF,aAAavF,EAAYoE,KAC/B,O,iCAGP,WAAuB,IAAD,OAClBT,KAAKiB,eAAe,UACpBN,YAAW,WAIP,IAHA,IAAMtE,EAAaH,EAAkB,EAAKuD,MAAMC,MAAO,UACjDe,EAAOS,SAASC,uBAAuB,aAFhC,WAIJ5E,GACL,GAAIF,EAAWE,GAAG,GAAK,EAAG,CACtB,kBAA0BF,EAAWE,GAArC,GAAO6E,EAAP,KAAcC,EAAd,KAAqBC,EAArB,KACMC,EAAUd,EAAKW,GAAOP,MACtBW,EAAUf,EAAKY,GAAOR,MACtBY,EAAc,IAANH,EAAUpC,EAAUD,EAClC0B,YAAW,WACPY,EAAQT,gBAAkBW,EAC1BD,EAAQV,gBAAkBW,IAC3BlF,EAAI,EAAKkD,MAAME,YAElBgB,YAAW,WACP,kBAAyBtE,EAAWE,GAApC,GAAOiB,EAAP,KAAYkE,EAAZ,KAAoBJ,EAApB,KACMV,EAASH,EAAKjD,GAAKqD,MACzBD,EAAOc,OAAP,UAAmBA,EAAnB,MACU,IAANJ,IAASV,EAAOE,gBAAkB1B,KACvC7C,EAAI,EAAKkD,MAAME,QAhBjBpD,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IAAM,EAApCA,GAoBT,EAAKqF,aAAavF,EAAYoE,KAC/B,O,gCAGP,WAAsB,IAAD,OACjBT,KAAKiB,eAAe,SACpBN,YAAW,WAIP,IAHA,IAAMtE,EAAaH,EAAkB,EAAKuD,MAAMC,MAAO,SACjDe,EAAOS,SAASC,uBAAuB,aAFhC,WAIJ5E,GACL,GAAIF,EAAWE,GAAG,GAAK,EAAG,CACtB,kBAA0BF,EAAWE,GAArC,GAAO6E,EAAP,KAAcC,EAAd,KAAqBC,EAArB,KACMC,EAAUd,EAAKW,GAAOP,MACtBW,EAAUf,EAAKY,GAAOR,MACtBY,EAAc,IAANH,EAAUhC,EAAWF,EACnCuB,YAAW,WACPY,EAAQT,gBAAkBW,EAC1BD,EAAQV,gBAAkBW,IAC3BlF,EAAI,EAAKkD,MAAME,YAElBgB,YAAW,WACP,kBAAsBtE,EAAWE,GAAjC,GAAOiB,EAAP,KAAYkE,EAAZ,KACMd,EAASH,EAAKjD,GAAKqD,MACzBD,EAAOc,OAAP,UAAmBA,EAAnB,MACAd,EAAOE,gBAAkB1B,IAC1B7C,EAAI,EAAKkD,MAAME,QAhBjBpD,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IAAM,EAApCA,GAoBT,EAAKqF,aAAavF,EAAYoE,KAC/B,O,gCAGP,WAAsB,IAAD,OACjBT,KAAKiB,eAAe,SACpBN,YAAW,WAIP,IAHA,IAAMtE,EAAaH,EAAkB,EAAKuD,MAAMC,MAAO,SACjDe,EAAOS,SAASC,uBAAuB,aAFhC,WAIJ5E,GACL,GAAIF,EAAWE,GAAG,GAAK,EAAG,CACtB,kBAA0BF,EAAWE,GAArC,GAAO6E,EAAP,KAAcC,EAAd,KAAqBC,EAArB,KACMC,EAAUd,EAAKW,GAAOP,MACtBW,EAAUf,EAAKY,GAAOR,MACtBY,EAAc,IAANH,EAAUhC,EAAWD,EACnCsB,YAAW,WACPY,EAAQT,gBAAkBW,EAC1BD,EAAQV,gBAAkBW,IAC3BlF,EAAI,EAAKkD,MAAME,YAElBgB,YAAW,WACP,kBAAsBtE,EAAWE,GAAjC,GAAOiB,EAAP,KAAYkE,EAAZ,KACMd,EAASH,EAAKjD,GAAKqD,MACzBD,EAAOc,OAAP,UAAmBA,EAAnB,MACAd,EAAOE,gBAAkB1B,IAC1B7C,EAAI,EAAKkD,MAAME,QAhBjBpD,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IAAM,EAApCA,GAoBT,EAAKqF,aAAavF,EAAYoE,KAC/B,O,mCAGP,WAAyB,IAAD,OACpBT,KAAKiB,eAAe,YACpBN,YAAW,WAIP,IAHA,IAAMtE,EAAaH,EAAkB,EAAKuD,MAAMC,MAAO,YACjDe,EAAOS,SAASC,uBAAuB,aAFhC,WAIJ5E,GACL,GAAyB,IAArBF,EAAWE,GAAG,GAAU,CACxB,IAAOsF,EAAP,YAAexF,EAAWE,GAA1B,MACMqE,EAASH,EAAKoB,GAAMhB,MAE1BF,YAAW,WACPC,EAAOE,gBAFGzB,kBAGX9C,EAAI,EAAKkD,MAAME,YAElBgB,YAAW,WACP,kBAAsBtE,EAAWE,GAAjC,GAAOiB,EAAP,KAAYkE,EAAZ,KACMd,EAASH,EAAKjD,GAAKqD,MACzBD,EAAOc,OAAP,UAAmBA,EAAnB,MACAd,EAAOE,gBAAkB1B,IAC1B7C,EAAI,EAAKkD,MAAME,QAdjBpD,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IAAM,EAApCA,GAkBT,EAAKqF,aAAavF,EAAYoE,KAC/B,O,+BAGP,WAAqB,IAAD,OAChBT,KAAKiB,eAAe,QACpBN,YAAW,WAIP,IAHA,IAAMtE,EAAaH,EAAkB,EAAKuD,MAAMC,MAAO,QACjDe,EAAOS,SAASC,uBAAuB,aAFhC,WAIJ5E,GACL,GAAIF,EAAWE,GAAG,IAAM,EAAG,CACvB,kBAA0BF,EAAWE,GAArC,GAAO6E,EAAP,KAAcC,EAAd,KAAqBC,EAArB,KACMC,EAAUd,EAAKW,GAAOP,MACtBW,EAAUf,EAAKY,GAAOR,MACtBY,EAAc,IAANH,EAAUhC,EAAWD,EACnCsB,YAAW,WACPY,EAAQT,gBAAkBW,EAC1BD,EAAQV,gBAAkBW,IAC3BlF,EAAI,EAAKkD,MAAME,YAElBgB,YAAW,WACP,kBAAyBtE,EAAWE,GAApC,GAAOiB,EAAP,KAAYkE,EAAZ,KAAoBJ,EAApB,KACMV,EAASH,EAAKjD,GAAKqD,MACzBD,EAAOc,OAAP,UAAmBA,EAAnB,MACAd,EAAOE,gBAAwB,IAANQ,EAAUjC,EAAUD,IAC9C7C,EAAI,EAAKkD,MAAME,QAhBjBpD,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IAAM,EAApCA,GAoBT,EAAKqF,aAAavF,EAAYoE,KAC/B,O,oBAGP,WAAU,IAAD,OACL,EAAyCT,KAAKP,MAAtCC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,WAAYxD,EAA3B,EAA2BA,UACrB0F,EAAenE,KAAKC,MAAMmE,IAAYL,OAAS,GAC/CM,EAAkBrE,KAAKC,MAAMmE,IAAYL,OAAS,IAClDO,EAAWtE,KAAKC,MA2CIsE,OAAtBC,YA3C2D,IAAfzC,EAAMlD,SAChD4F,EAAYpC,KAAKqC,YAEvB,OACI,sBAAKC,GAAG,OAAR,UACI,sBAAKC,UAAU,OAAO1B,MAAO,CAACa,OAAO,GAAD,OAAKI,EAAL,OAApC,UACI,sBAAKQ,GAAG,qBAAR,UACI,gDACA,qBAAKC,UAAU,kBAAkBC,QAAU5C,EAAsD,KAAzC,kBAAM,EAAKK,UAAUP,EAAMlD,OAAS,IAA5F,yBAEJ,qBAAK+F,UAAU,UACf,sBAAKD,GAAG,sBAAR,UACI,mDACA,uBAAOG,KAAK,QAAQ5F,IAAI,IAAI6F,IAAI,MAAMC,SAAW/C,EAAqC,KAAxBI,KAAKH,iBAAyB0C,UAAU,cAE1G,qBAAKA,UAAU,UACf,sBAAKD,GAAG,uBAAR,UACI,sDACA,uBAAOG,KAAK,QAAQ5F,IAAI,IAAI6F,IAAI,KAAKC,SAAW/C,EAAsC,KAAzBI,KAAKD,kBAA0BwC,UAAU,SAAS1B,MAAO,CAAC+B,UAAW,eAG1I,qBAAKN,GAAG,kBAAR,SACK5C,EAAMmD,KAAI,SAACzC,EAAO5C,GAAR,OAAkB,qBAAK+E,UAAU,YAAsB1B,MAAO,CAACa,OAAO,GAAD,OAAKtB,EAAL,MAAgB0C,MAAM,GAAD,OAAKb,EAAL,MAAmBc,WAAW,GAAD,OAAKX,EAAL,MAAoBY,YAAY,GAAD,OAAKZ,EAAL,MAAoBtB,gBAAiB7B,IAAzIzB,QAEjE,sBAAK+E,UAAU,OAAO1B,MAAO,CAACa,OAAO,GAAD,OAAKM,EAAL,OAApC,UACI,qBAAKO,UAAyB,cAAdnG,EAA4B,iBAAmB,SAAUoG,QAAU5C,EAAmD,KAAtC,kBAAM,EAAKqD,0BAA3G,4BACA,qBAAKV,UAAyB,cAAdnG,EAA4B,iBAAmB,SAAUoG,QAAU5C,EAAmD,KAAtC,kBAAM,EAAKsD,0BAA3G,4BACA,qBAAKX,UAAyB,WAAdnG,EAAyB,iBAAmB,SAAUoG,QAAU5C,EAAgD,KAAnC,kBAAM,EAAKuD,uBAAxG,yBACA,qBAAKZ,UAAyB,UAAdnG,EAAwB,iBAAmB,SAAUoG,QAAU5C,EAA+C,KAAlC,kBAAM,EAAKwD,sBAAvG,wBACA,qBAAKb,UAAyB,UAAdnG,EAAwB,iBAAmB,SAAUoG,QAAU5C,EAA+C,KAAlC,kBAAM,EAAKyD,sBAAvG,wBACA,qBAAKd,UAAyB,aAAdnG,EAA2B,iBAAmB,SAAUoG,QAAU5C,EAAkD,KAArC,kBAAM,EAAK0D,yBAA1G,2BACA,qBAAKf,UAAyB,SAAdnG,EAAuB,iBAAmB,SAAUoG,QAAU5C,EAA8C,KAAjC,kBAAM,EAAK2D,qBAAtG,iC,GAjVoBC,IAAMC,WAiW9C,SAAS1B,IAEL,MAAO,CAAEL,OADuBQ,OAAxBwB,a,MCjWGC,MARf,WACE,OACE,qBAAKpB,UAAU,MAAf,SACE,cAAC,EAAD,OCKSqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,cAAC,EAAD,IAASpD,SAASqD,eAAe,SAKjDX,M","file":"static/js/main.94e3ebfc.chunk.js","sourcesContent":["export function getSortAnimations(arr, algorithm) {\r\n    const animations = [];\r\n    const copy = [];\r\n    for (let i = 0; i < arr.length; i++)\r\n        copy[i] = arr[i];\r\n    copy.sort((a, b) => { return a - b });\r\n\r\n    if (algorithm === \"Selection\") selectionSortHelper(arr, animations);\r\n    else if (algorithm === \"Insertion\") insertionSortHelper(arr, animations);\r\n    else if (algorithm === \"Bubble\") bubbleSortHelper(arr, animations);\r\n    else if (algorithm === \"Merge\") mergeSortHelper(arr, animations, 0, arr.length - 1);\r\n    else if (algorithm === \"Quick\") quickSortHelper(arr, animations, 0, arr.length - 1);\r\n    else if (algorithm === \"Counting\") countingSortHelper(arr, animations);\r\n    else if (algorithm === \"Heap\") heapSortHelper(arr, animations);\r\n\r\n    console.log(areEqual(copy, arr));\r\n\r\n    return animations;\r\n}\r\n\r\nfunction selectionSortHelper(arr, animations) {\r\n    const n = arr.length;\r\n\r\n    for (let i = 0; i < n; i++) {\r\n        let min = i;\r\n\r\n        for (let j = i + 1; j < n; j++) {\r\n            animations.push([min, j, 0]);\r\n            animations.push([min, j, -1]);\r\n            if (arr[j] < arr[min]) min = j;\r\n        }\r\n\r\n        if (min !== i) {\r\n            swap(arr, i, min);\r\n            animations.push([i, arr[i], 1]);\r\n            animations.push([min, arr[min], 2]);\r\n        }\r\n        else animations.push([i, arr[i], 1]);\r\n    }\r\n}\r\n\r\nfunction insertionSortHelper(arr, animations) {\r\n    const n = arr.length;\r\n    animations.push([0, arr[0], 1])\r\n\r\n    for (let i = 1; i < n; i++) {\r\n        for (let j = i; j > 0; j--) {\r\n            animations.push([j, j - 1, 0]);\r\n            if (arr[j] > arr[j - 1]) {\r\n                animations.push([j, arr[j], 1]);\r\n                animations.push([j - 1, arr[j - 1], 1]);\r\n                break;\r\n            }\r\n            swap(arr, j, j - 1);\r\n            animations.push([j, arr[j], 1]);\r\n            animations.push([j - 1, arr[j - 1], 1]);\r\n        }\r\n    }\r\n}\r\n\r\nfunction bubbleSortHelper(arr, animations) {\r\n    const n = arr.length;\r\n    let sorted = false;\r\n\r\n    for (let end = n - 1; !sorted; end--) {\r\n        sorted = true;\r\n\r\n        for (let i = 0; i < end; i++) {\r\n            animations.push([i, i + 1, 0]);\r\n            animations.push([i, i + 1, -1]);\r\n            if (arr[i] > arr[i + 1]) {\r\n                swap(arr, i, i + 1);\r\n                animations.push([i, arr[i], 2]);\r\n                animations.push([i + 1, arr[i + 1], 2]);\r\n                sorted = false;\r\n            }\r\n        }\r\n\r\n        animations.push([end, arr[end], 1]);\r\n    }\r\n}\r\n\r\nfunction mergeSortHelper(arr, animations, left, right) {\r\n    if (left >= right) return;\r\n\r\n    const mid = left + Math.floor((right - left) / 2);\r\n    mergeSortHelper(arr, animations, left, mid);\r\n    mergeSortHelper(arr, animations, mid + 1, right);\r\n    merge(arr, animations, left, mid, right);\r\n}\r\n\r\nfunction merge(arr, animations, left, mid, right) {\r\n    let n1 = mid - left + 1, n2 = right - mid;\r\n    let t1 = [], t2 = [];\r\n\r\n    for (let i = 0; i < n1; i++)\r\n        t1[i] = arr[left + i];\r\n\r\n    for (let j = 0; j < n2; j++)\r\n        t2[j] = arr[mid + j + 1];\r\n\r\n    let i = 0, j = 0, idx = left;\r\n    while (i < n1 && j < n2) {\r\n        animations.push([left + i, mid + j + 1, 0]);\r\n        animations.push([left + i, mid + j + 1, -1]);\r\n        arr[idx] = t1[i] < t2[j] ? t1[i++] : t2[j++];\r\n        animations.push([idx, arr[idx++], 1]);\r\n    }\r\n\r\n    while (i < n1) {\r\n        arr[idx] = t1[i++];\r\n        animations.push([idx, arr[idx++], 1]);\r\n    }\r\n\r\n    while (j < n2) {\r\n        arr[idx] = t2[j++];\r\n        animations.push([idx, arr[idx++], 1]);\r\n    }\r\n}\r\n\r\nfunction quickSortHelper(arr, animations, left, right) {\r\n    if (left >= right) return;\r\n\r\n    let p = partition(arr, animations, left, right);\r\n    quickSortHelper(arr, animations, left, p - 1);\r\n    quickSortHelper(arr, animations, p + 1, right);\r\n}\r\n\r\nfunction partition(arr, animations, left, right) {\r\n    let pivot = arr[right], i = left;\r\n\r\n    for (let j = left; j < right; j++) {\r\n        animations.push([j, right, 0]);\r\n        animations.push([j, right, -1]);\r\n        if (arr[j] < pivot) {\r\n            swap(arr, i, j);\r\n            animations.push([i, arr[i++], 1]);\r\n        }\r\n    }\r\n\r\n    swap(arr, i, right);\r\n    for (let j = i; j <= right; j++)\r\n        animations.push([j, arr[j], 1]);\r\n    return i;\r\n}\r\n\r\nfunction countingSortHelper(arr, animations) {\r\n    let n = arr.length, idx = 0;\r\n    const freq = [];\r\n\r\n    for (let i = 0; i <= 750; i++)\r\n        freq.push(0);\r\n\r\n    for (let i = 0; i < n; i++) {\r\n        animations.push([i, 0]);\r\n        freq[arr[i]]++;\r\n    }\r\n\r\n    for (let i = 0; i <= 750; i++) {\r\n        while (freq[i] > 0) {\r\n            arr[idx] = i;\r\n            animations.push([idx, arr[idx++], 1]);\r\n            freq[i]--;\r\n        }\r\n    }\r\n}\r\n\r\nfunction heapSortHelper(arr, animations) {\r\n    let n = arr.length;\r\n\r\n    for (let i = Math.floor(n / 2) - 1; i >= 0; i--)\r\n        heapify(arr, animations, n, i);\r\n\r\n    for (let i = n - 1; i > 0; i--) {\r\n        swap(arr, 0, i);\r\n        animations.push([i, arr[i], 1]);\r\n        heapify(arr, animations, i, 0);\r\n    }\r\n\r\n    animations.push([0, arr[0], 1]);\r\n}\r\n\r\nfunction heapify(arr, animations, n, i) {\r\n    let largest = i, l = 2 * i + 1, r = 2 * i + 2;\r\n\r\n    if (l < n) {\r\n        animations.push([l, largest, 0]);\r\n        animations.push([l, largest, -1]);\r\n        if (arr[l] > arr[largest]) largest = l;\r\n    }\r\n    if (r < n) {\r\n        animations.push([r, largest, 0]);\r\n        animations.push([r, largest, -1]);\r\n        if (arr[r] > arr[largest]) largest = r;\r\n    }\r\n\r\n    if (largest !== i) {\r\n        swap(arr, i, largest);\r\n        animations.push([i, arr[i], 2]);\r\n        animations.push([largest, arr[largest], 2]);\r\n        heapify(arr, animations, n, largest);\r\n    }\r\n}\r\n\r\nfunction swap(arr, i, j) {\r\n    let temp = arr[i];\r\n    arr[i] = arr[j];\r\n    arr[j] = temp;\r\n}\r\n\r\nfunction print(arr) {\r\n    for (let i = 0; i < arr.length; i++)\r\n        console.log(arr[i]);\r\n}\r\n\r\nfunction compare(arr, sorted) {\r\n    for (let i = 0; i < arr.length; i++)\r\n        if (arr[i] !== sorted[i]) console.log(i + \": \" + arr[i] + \" \" + sorted[i]);\r\n}\r\n\r\nfunction areEqual(arr, sorted) {\r\n    for (let i = 0; i < arr.length; i++)\r\n        if (arr[i] !== sorted[i]) return false;\r\n    return true;\r\n}","import React from 'react';\r\nimport { getSortAnimations } from '../Algorithms/SortingAlgorithms.js';\r\nimport './Visualizer.css';\r\n\r\nconst UNSORTED = 'black';\r\nconst COMPARE = 'crimson';\r\nconst SORTED = 'chartreuse';\r\nconst MOVED = 'darkviolet';\r\nconst SCANNED = 'lightseagreen';\r\nconst CONTRAST = 'ivory';\r\n\r\nexport default class Visualizer extends React.Component {\r\n    constructor(props) {\r\n        super (props);\r\n        this.state = {\r\n            array: [],\r\n            speed: 75,\r\n            inProgress: false,\r\n            algorithm: \"\",\r\n        };\r\n        this.handleSizeChange = this.handleSizeChange.bind(this);\r\n        this.handleSpeedChange = this.handleSpeedChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.makeArray(5);\r\n    }\r\n\r\n    handleSizeChange(event) {\r\n        this.makeArray(event.target.value);\r\n    }\r\n\r\n    handleSpeedChange(event) {\r\n        this.updateSpeed(event.target.value);\r\n    }\r\n\r\n    updateSpeed(newSpeed) {\r\n        this.setState(() => {\r\n            return { speed: newSpeed };\r\n        });\r\n    }\r\n\r\n    markInProgress(alg) {\r\n        this.setState(() => {\r\n            return { inProgress: true, algorithm: alg };\r\n        });\r\n    }\r\n\r\n    markAsFinished() {\r\n        this.setState(() => {\r\n            return { inProgress: false, algorithm: \"\" };\r\n        });\r\n    }\r\n\r\n    makeArray(bars) {\r\n        if (!this.state.inProgress) {\r\n            const array = [];\r\n            for (let i = 0; i < bars; i++) {\r\n                array.push(randomInt(5, 750));\r\n            }\r\n            array.push(750);\r\n            this.setState(() => {\r\n                return { array: array }; \r\n            });\r\n        }\r\n    }\r\n\r\n    getMargin() {\r\n        const { array } = this.state;\r\n        return array.length < 5 ?\r\n            10 : array.length < 8 ?\r\n            8 : array.length < 11 ?\r\n            6 : array.length < 20 ?\r\n            4 : array.length < 50 ?\r\n            3 : array.length < 100 ?\r\n            2 : array.length < 130 ?\r\n            1 : 0.5;\r\n    }\r\n\r\n    markAsSorted(animations, bars) {\r\n        for (let i = 0; i < animations.length; i++) {\r\n            setTimeout(() => {\r\n                const [idx] = animations[i];\r\n                const bstyle = bars[idx].style;\r\n                if (bstyle.backgroundColor !== SORTED) bstyle.backgroundColor = SORTED;\r\n            }, animations.length * this.state.speed);\r\n        }\r\n\r\n        this.reset(animations, bars);\r\n    }\r\n\r\n    reset(animations, bars) {\r\n        for (let i = 0; i < animations.length; i++) {\r\n            setTimeout(() => {\r\n                const [idx] = animations[i];\r\n                const bstyle = bars[idx].style;\r\n                bstyle.backgroundColor = UNSORTED;\r\n            }, (animations.length * this.state.speed) + 1500);\r\n        }\r\n        setTimeout(() => {\r\n            this.markAsFinished();\r\n            console.log(\"Finished\");\r\n        }, (animations.length * this.state.speed) + 1501);\r\n    }\r\n\r\n    visualizeSelectionSort() {\r\n        this.markInProgress(\"Selection\");\r\n        setTimeout(() => {\r\n            const animations = getSortAnimations(this.state.array, \"Selection\");\r\n            const bars = document.getElementsByClassName('array-bar');\r\n\r\n            for (let i = 0; i < animations.length; i++) {\r\n                if (animations[i][2] < 1) {\r\n                    const [b1idx, b2idx, c] = animations[i];\r\n                    const b1style = bars[b1idx].style;\r\n                    const b2style = bars[b2idx].style;\r\n                    const color = c === 0 ? COMPARE : UNSORTED;\r\n                    setTimeout(() => {\r\n                        b1style.backgroundColor = color;\r\n                        b2style.backgroundColor = color;\r\n                    }, i * this.state.speed);\r\n                } else {\r\n                    setTimeout(() => {\r\n                        const [idx, height, s] = animations[i];\r\n                        const bstyle = bars[idx].style;\r\n                        bstyle.height = `${height}px`;\r\n                        if (s === 1) bstyle.backgroundColor = MOVED;\r\n                    }, i * this.state.speed);\r\n                }\r\n            }\r\n\r\n            this.markAsSorted(animations, bars);\r\n        }, 100);\r\n    }\r\n\r\n    visualizeInsertionSort() {\r\n        this.markInProgress(\"Insertion\");\r\n        setTimeout(() => {\r\n            const animations = getSortAnimations(this.state.array, \"Insertion\");\r\n            const bars = document.getElementsByClassName('array-bar');\r\n\r\n            for (let i = 0; i < animations.length; i++) {\r\n                if (animations[i][2] === 0) {\r\n                    const [b1idx, b2idx, c] = animations[i];\r\n                    const b1style = bars[b1idx].style;\r\n                    const b2style = bars[b2idx].style;\r\n                    const color = c === 0 ? COMPARE : UNSORTED;\r\n                    setTimeout(() => {\r\n                        b1style.backgroundColor = color;\r\n                        b2style.backgroundColor = color;\r\n                    }, i * this.state.speed);\r\n                } else {\r\n                    setTimeout(() => {\r\n                        const [idx, height] = animations[i];\r\n                        const bstyle = bars[idx].style;\r\n                        bstyle.height = `${height}px`;\r\n                        bstyle.backgroundColor = MOVED;\r\n                    }, i * this.state.speed);\r\n                }\r\n            }\r\n\r\n            this.markAsSorted(animations, bars);\r\n        }, 100);\r\n    }\r\n\r\n    visualizeBubbleSort() {\r\n        this.markInProgress(\"Bubble\");\r\n        setTimeout(() => {\r\n            const animations = getSortAnimations(this.state.array, \"Bubble\");\r\n            const bars = document.getElementsByClassName('array-bar');\r\n\r\n            for (let i = 0; i < animations.length; i++) {\r\n                if (animations[i][2] < 1) {\r\n                    const [b1idx, b2idx, c] = animations[i];\r\n                    const b1style = bars[b1idx].style;\r\n                    const b2style = bars[b2idx].style;\r\n                    const color = c === 0 ? COMPARE : UNSORTED;\r\n                    setTimeout(() => {\r\n                        b1style.backgroundColor = color;\r\n                        b2style.backgroundColor = color;\r\n                    }, i * this.state.speed);\r\n                } else {\r\n                    setTimeout(() => {\r\n                        const [idx, height, c] = animations[i];\r\n                        const bstyle = bars[idx].style;\r\n                        bstyle.height = `${height}px`;\r\n                        if (c === 1) bstyle.backgroundColor = MOVED;\r\n                    }, i * this.state.speed);\r\n                }\r\n            }\r\n\r\n            this.markAsSorted(animations, bars);\r\n        }, 100);\r\n    }\r\n\r\n    visualizeMergeSort() {\r\n        this.markInProgress(\"Merge\");\r\n        setTimeout(() => {\r\n            const animations = getSortAnimations(this.state.array, \"Merge\");\r\n            const bars = document.getElementsByClassName('array-bar');\r\n\r\n            for (let i = 0; i < animations.length; i++) {\r\n                if (animations[i][2] < 1) {\r\n                    const [b1idx, b2idx, c] = animations[i];\r\n                    const b1style = bars[b1idx].style;\r\n                    const b2style = bars[b2idx].style;\r\n                    const color = c === 0 ? CONTRAST : MOVED;\r\n                    setTimeout(() => {\r\n                        b1style.backgroundColor = color;\r\n                        b2style.backgroundColor = color;\r\n                    }, i * this.state.speed);\r\n                } else {\r\n                    setTimeout(() => {\r\n                        const [idx, height] = animations[i];\r\n                        const bstyle = bars[idx].style;\r\n                        bstyle.height = `${height}px`;\r\n                        bstyle.backgroundColor = MOVED;\r\n                    }, i * this.state.speed);\r\n                }\r\n            }\r\n\r\n            this.markAsSorted(animations, bars);\r\n        }, 100);\r\n    }\r\n\r\n    visualizeQuickSort() {\r\n        this.markInProgress(\"Quick\");\r\n        setTimeout(() => {\r\n            const animations = getSortAnimations(this.state.array, \"Quick\");\r\n            const bars = document.getElementsByClassName('array-bar');\r\n\r\n            for (let i = 0; i < animations.length; i++) {\r\n                if (animations[i][2] < 1) {\r\n                    const [b1idx, b2idx, c] = animations[i];\r\n                    const b1style = bars[b1idx].style;\r\n                    const b2style = bars[b2idx].style;\r\n                    const color = c === 0 ? CONTRAST : SCANNED;\r\n                    setTimeout(() => {\r\n                        b1style.backgroundColor = color;\r\n                        b2style.backgroundColor = color;\r\n                    }, i * this.state.speed);\r\n                } else {\r\n                    setTimeout(() => {\r\n                        const [idx, height] = animations[i];\r\n                        const bstyle = bars[idx].style;\r\n                        bstyle.height = `${height}px`;\r\n                        bstyle.backgroundColor = MOVED;\r\n                    }, i * this.state.speed);\r\n                }\r\n            }\r\n\r\n            this.markAsSorted(animations, bars);\r\n        }, 100);\r\n    }\r\n\r\n    visualizeCountingSort() {\r\n        this.markInProgress(\"Counting\");\r\n        setTimeout(() => {\r\n            const animations = getSortAnimations(this.state.array, \"Counting\");\r\n            const bars = document.getElementsByClassName('array-bar');\r\n\r\n            for (let i = 0; i < animations.length; i++) {\r\n                if (animations[i][1] === 0) {\r\n                    const [bidx] = animations[i];\r\n                    const bstyle = bars[bidx].style;\r\n                    const color = SCANNED;\r\n                    setTimeout(() => {\r\n                        bstyle.backgroundColor = color;\r\n                    }, i * this.state.speed);\r\n                } else {\r\n                    setTimeout(() => {\r\n                        const [idx, height] = animations[i];\r\n                        const bstyle = bars[idx].style;\r\n                        bstyle.height = `${height}px`;\r\n                        bstyle.backgroundColor = MOVED;\r\n                    }, i * this.state.speed);\r\n                }\r\n            }\r\n\r\n            this.markAsSorted(animations, bars);\r\n        }, 100);\r\n    }\r\n\r\n    visualizeHeapSort() {\r\n        this.markInProgress(\"Heap\");\r\n        setTimeout(() => {\r\n            const animations = getSortAnimations(this.state.array, \"Heap\");\r\n            const bars = document.getElementsByClassName('array-bar');\r\n\r\n            for (let i = 0; i < animations.length; i++) {\r\n                if (animations[i][2] <= 0) {\r\n                    const [b1idx, b2idx, c] = animations[i];\r\n                    const b1style = bars[b1idx].style;\r\n                    const b2style = bars[b2idx].style;\r\n                    const color = c === 0 ? CONTRAST : SCANNED;\r\n                    setTimeout(() => {\r\n                        b1style.backgroundColor = color;\r\n                        b2style.backgroundColor = color;\r\n                    }, i * this.state.speed);\r\n                } else {\r\n                    setTimeout(() => {\r\n                        const [idx, height, c] = animations[i];\r\n                        const bstyle = bars[idx].style;\r\n                        bstyle.height = `${height}px`;\r\n                        bstyle.backgroundColor = c === 2 ? SCANNED : MOVED;\r\n                    }, i * this.state.speed);\r\n                }\r\n            }\r\n\r\n            this.markAsSorted(animations, bars);\r\n        }, 100);\r\n    }\r\n\r\n    render() {\r\n        const { array, inProgress, algorithm } = this.state;\r\n        const numHeightTop = Math.floor(getHeight().height / 8);\r\n        const numHeightBottom = Math.floor(getHeight().height / 10);\r\n        const numWidth = Math.floor(getWidth().width / (array.length * 1.4));\r\n        const numMargin = this.getMargin();\r\n\r\n        return (\r\n            <div id=\"page\">\r\n                <div className=\"menu\" style={{height: `${numHeightTop}px`}}>\r\n                    <div id=\"makeArrayContainer\">\r\n                        <h3>Make New Array</h3>\r\n                        <div className=\"makeArrayButton\" onClick={!inProgress ? () => this.makeArray(array.length - 1) : null}>Shuffle!</div>\r\n                    </div>\r\n                    <div className=\"space\" />\r\n                    <div id=\"sizeSliderContainer\">\r\n                        <h3>Change Array Size</h3>\r\n                        <input type=\"range\" min=\"1\" max=\"250\" onChange={!inProgress ? this.handleSizeChange : null} className=\"slider\" />\r\n                    </div>\r\n                    <div className=\"space\" />\r\n                    <div id=\"speedSliderContainer\">\r\n                        <h3>Change Sorting Speed</h3>\r\n                        <input type=\"range\" min=\"1\" max=\"75\" onChange={!inProgress ? this.handleSpeedChange : null} className=\"slider\" style={{direction: 'rtl'}} />\r\n                    </div>\r\n                </div>\r\n                <div id=\"array-container\">\r\n                    {array.map((value, idx) => ( <div className=\"array-bar\" key={idx} style={{height: `${value}px`, width: `${numWidth}px`, marginLeft: `${numMargin}px`, marginRight: `${numMargin}px`, backgroundColor: UNSORTED}} /> ))}\r\n                </div>\r\n                <div className=\"menu\" style={{height: `${numHeightBottom}px`}}>\r\n                    <div className={algorithm === \"Selection\" ? \"selectedButton\" : \"button\"} onClick={!inProgress ? () => this.visualizeSelectionSort() : null}>Selection Sort</div>\r\n                    <div className={algorithm === \"Insertion\" ? \"selectedButton\" : \"button\"} onClick={!inProgress ? () => this.visualizeInsertionSort() : null}>Insertion Sort</div>\r\n                    <div className={algorithm === \"Bubble\" ? \"selectedButton\" : \"button\"} onClick={!inProgress ? () => this.visualizeBubbleSort() : null}>Bubble Sort</div>\r\n                    <div className={algorithm === \"Merge\" ? \"selectedButton\" : \"button\"} onClick={!inProgress ? () => this.visualizeMergeSort() : null}>Merge Sort</div>\r\n                    <div className={algorithm === \"Quick\" ? \"selectedButton\" : \"button\"} onClick={!inProgress ? () => this.visualizeQuickSort() : null}>Quick Sort</div>\r\n                    <div className={algorithm === \"Counting\" ? \"selectedButton\" : \"button\"} onClick={!inProgress ? () => this.visualizeCountingSort() : null}>Counting Sort</div>\r\n                    <div className={algorithm === \"Heap\" ? \"selectedButton\" : \"button\"} onClick={!inProgress ? () => this.visualizeHeapSort() : null}>Heap Sort</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction randomInt(a, b) {\r\n    return Math.floor(Math.random() * (b - a + 1) + a);\r\n}\r\n\r\nfunction getWidth() {\r\n    const { innerWidth: width } = window;\r\n    return { width };\r\n}\r\n\r\nfunction getHeight() {\r\n    const { innerHeight: height } = window;\r\n    return { height };\r\n}","import React from 'react';\nimport Visualizer from './Visualizer/Visualizer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Visualizer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}